Функция ПечатьКоммерческого(ДокументСсылка) Экспорт
	
	//======================================================================================================================
	
	//	ДокументСсылка =  Документы.КоммерческоеПредложение.ПустаяСсылка(); // TODO Убрать !!!!!!!!!!!!!!!!!!!!!!
	//======================================================================================================================
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("МакетКоммерческого190619");
	
	#Область Шапка
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Фирма = ДокументСсылка.Фирма.НаименованиеПолное;
	ОбластьШапка.Параметры.ИдентификационныйНомер = ДокументСсылка.Фирма.ИдентификационныйНомер;
	
	РеквизитыФирмы = ДокументСсылка.РеквизитыФирмы;
	ОбластьШапка.Параметры.РасчетныйСчет = РеквизитыФирмы.НомерРасчетногоСчета;
	ОбластьШапка.Параметры.Банк = РеквизитыФирмы.Банк;
	ОбластьШапка.Параметры.БикБанка = РеквизитыФирмы.БикБанка;
	ОбластьШапка.Параметры.ЭлектроннаяПочта = РеквизитыФирмы.ЭлектроннаяПочта;
	ОбластьШапка.Параметры.КонтактныйТелефон = РеквизитыФирмы.Телефон;
	ОбластьШапка.Параметры.Дата = Формат(ДокументСсылка.Дата, "ДЛФ=D");
	
	ОбластьШапка.Параметры.ОбластьАвтоматизации  =  ДокументСсылка.ОбластьАвтоматизации;
	ОбластьШапка.Параметры.Контрагент = ДокументСсылка.Контрагент; 
	ТабДокумент.Вывести(ОбластьШапка);      // ВЫВОДЯ
	
	#КонецОбласти
	
	
	#Область ШапкаТаблицы
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);     // ВЫВОД
	#КонецОбласти
	
	
	//====================================================================================================================== 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КоммерческоеПредложениеПереченьТоваров.Ссылка КАК Ссылка,
	|	КоммерческоеПредложениеПереченьТоваров.НомерСтроки КАК НомерСтроки,
	|	КоммерческоеПредложениеПереченьТоваров.Категория КАК Категория,
	|	КоммерческоеПредложениеПереченьТоваров.Номенклатура КАК Номенклатура,
	|	КоммерческоеПредложениеПереченьТоваров.Количество КАК Количество,
	|	КоммерческоеПредложениеПереченьТоваров.Цена КАК Цена,
	|	КоммерческоеПредложениеПереченьТоваров.Сумма КАК Сумма
	|ИЗ
	|	Документ.КоммерческоеПредложение.ПереченьТоваров КАК КоммерческоеПредложениеПереченьТоваров
	|ГДЕ
	|	КоммерческоеПредложениеПереченьТоваров.Ссылка = &Ссылка
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	Категория";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаКатегория = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	НомерКатегорииПоПорядку = 0;
	СуммаПроекта = 0;
	СуммаПоКатегории = 0;
	НомерНоменклатурыПоПорядку = 0;
	
	Пока ВыборкаКатегория.Следующий() Цикл
		
		НомерКатегорииПоПорядку = НомерКатегорииПоПорядку + 1;
		// Заголовок категории
		ОбластьШапкаКатегория = Макет.ПолучитьОбласть("ШапкаКатегория");
		ОбластьШапкаКатегория.Параметры.НомерКатегорииПоПорядку = НомерКатегорииПоПорядку;
		ОбластьШапкаКатегория.Параметры.Категория 				= ВыборкаКатегория.Категория;
		ТабДокумент.Вывести(ОбластьШапкаКатегория);  // ВЫВОД
	
		ВыборкаПодробности = ВыборкаКатегория.Выбрать();
		
		Пока ВыборкаПодробности.Следующий() Цикл 	// Расшифровка
			НомерНоменклатурыПоПорядку = НомерНоменклатурыПоПорядку + 1;
			ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьСтрокаТаблицы.Параметры.НомерНоменклатурыПоПорядку = НомерНоменклатурыПоПорядку;
			ОбластьСтрокаТаблицы.Параметры.Номенклатура = ВыборкаПодробности.Номенклатура.ПолноеНаименование;
			ОбластьСтрокаТаблицы.Параметры.Количество = ВыборкаПодробности.Количество;
			ОбластьСтрокаТаблицы.Параметры.ЕдиницаИзмерения = ВыборкаПодробности.Номенклатура.ЕдиницаИзмерения;
			ОбластьСтрокаТаблицы.Параметры.Цена = ВыборкаПодробности.Цена;
			ОбластьСтрокаТаблицы.Параметры.Сумма = ВыборкаПодробности.Цена * ВыборкаПодробности.Количество;
			СуммаПроекта = СуммаПроекта + (ВыборкаПодробности.Цена * ВыборкаПодробности.Количество);
			СуммаПоКатегории = СуммаПоКатегории + ОбластьСтрокаТаблицы.Параметры.Сумма;
			
			ТабДокумент.Вывести(ОбластьСтрокаТаблицы); // ВЫВОД

		КонецЦикла; 
		
		// подвал категории
		
		// итог по категории
		ОбластьИтогоКатегория = Макет.ПолучитьОбласть("ИтогКатегория");
		//ОбластьИтогоКатегория.Параметры.Категория = ВыборкаКатегория.Категория;
		ОбластьИтогоКатегория.Параметры.СуммаКатегория = СуммаПоКатегории;
		СуммаПоКатегории = 0;
		
		ТабДокумент.Вывести(ОбластьИтогоКатегория); // ВЫВОД
		
	КонецЦикла;
	
	// итого стоимость проекта
	ОбластьИтогоСтоимостьПроекта = Макет.ПолучитьОбласть("ИтогоСтоимостьПроекта");
	ОбластьИтогоСтоимостьПроекта.Параметры.СтоимостьПроекта = СуммаПроекта;	
	ТабДокумент.Вывести(ОбластьИтогоСтоимостьПроекта);     // ВЫВОД
	
	// Пропуск
	ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
	ТабДокумент.Вывести(ОбластьПропуск);     // ВЫВОД
	
	// [Подвал]
	
	ОбластьПодвалЗаголовок = Макет.ПолучитьОбласть("ПодвалЗаголовок");
	ТабДокумент.Вывести(ОбластьПодвалЗаголовок);
	
	ЧислоПримечаний = 0;
	ТекстПримечания = "";
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	//======================================================================================================================
	Для Каждого СтрокаПодвал Из ДокументСсылка.СтрокиПодвала Цикл
		Если ЗначениеЗаполнено(СтрокаПодвал.Примечание) Тогда
			ЧислоПримечаний = ЧислоПримечаний + 1;
			ТекстПримечания = ТекстПримечания + "- " +СтрокаПодвал.Примечание.НаименованиеПолное + Символы.ПС;
		КонецЕсли;
	КонецЦикла; 
	//======================================================================================================================
	ОбластьПодвал.Параметры.ТекстПримечания =  ТекстПримечания; 	
	ТабДокумент.Вывести(ОбластьПодвал);     // ВЫВОД
	
	
	
	Возврат ТабДокумент; 
	
КонецФункции
